// This file is automatically generated.
// Do not modify.

import { BaseDocument, Model, Schema, Validators } from '../src/index.mjs';
import { upgradePhone } from './upgraders.js';

const doctype__ = "phone";

const schema_version__ = 1;

type fencephoneType = 'mobile'|'home'|'work'|'other';

export interface IPhoneDoc extends BaseDocument {
	number: string;
	phoneType: fencephoneType;
}

export const PhoneSchema = new Schema(schema_version__, upgradePhone, {
	number: {
		type: 'string',
		validate: (v:string) => Validators.phone(v),
		required: true,
	},
	phoneType: {
		type: 'string',
		required: true,
		values: '"mobile"|"home"|"work"|"other"',
		validate: (v:string) => ['mobile','home','work','other'].includes(v),
		default: 'mobile',
	},
});

export class Phone extends Model<IPhoneDoc>(doctype__) {

	constructor(obj: any = {}) {
		super(PhoneSchema, obj);
	}

	get number(): string | undefined { return this._obj.number }
	set number(v: string | undefined) {
		if (v === undefined)
			delete this._obj.number;
		else
			this._obj.number = v;
	}

	get phoneType(): fencephoneType | undefined { return this._obj.phoneType }
	set phoneType(v: fencephoneType | undefined) {
		if (v === undefined)
			delete this._obj.phoneType;
		else
			this._obj.phoneType = v;
	}

	toJSON() {
		let rv = super.toJSON();
		if(this.number !== undefined)
			rv['number'] = this.number;
		if(this.phoneType !== undefined)
			rv['phoneType'] = this.phoneType;
		return rv;
	}
}

